import me.modmuss50.mpp.ReleaseType

plugins {
    id 'me.modmuss50.mod-publish-plugin' version '0.8.4'
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // ParchmentMC repository
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    // Mod Menu repository
    maven {
        url 'https://maven.terraformersmc.com/releases/'
    }
    // Jitpack for Tweakeroo and Malilib
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:${project.parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("com.github.sakura-ryoko:malilib:${malilib_build_version}") {
        exclude(group: "me.fallenbreath", module: "mixin-auditor")
    }
    modCompileOnly("com.github.sakura-ryoko:tweakeroo:${tweakeroo_build_version}") {
        exclude(group: "me.fallenbreath", module: "mixin-auditor")
    }
    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

    // Used during testing
    modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
    // Comment me to test without Tweakeroo
    modRuntimeOnly("com.github.sakura-ryoko:tweakeroo:${tweakeroo_build_version}") {
        exclude(group: "me.fallenbreath", module: "mixin-auditor")
    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "eclipsestweakeroo" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

    runs {
        named("client") {
            runDir = "runs/run-client-${project.minecraft_version}"
        }

        named("server") {
            runDir = "runs/run-server-${project.minecraft_version}"
        }
    }

    accessWidenerPath = file("src/main/resources/eclipsestweakeroo.accesswidener")
}

processResources {
    inputs.property "version", project.version
    inputs.property "supported_versions", project.supported_versions
    inputs.property "loader_version", project.loader_version
    inputs.property "malilib_version", project.malilib_version
    inputs.property "tweakeroo_version", project.tweakeroo_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "supported_versions": project.supported_versions,
                "loader_version": project.loader_version,
                "malilib_version": project.malilib_version,
                "tweakeroo_version": project.tweakeroo_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}"}
    }
}

publishing {
    repositories {
        maven {
            name = "eclipseisoffline"
            url = "https://maven.eclipseisoffline.xyz/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }

    publications {
        maven(MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
}

publish {
    dependsOn("publishMods")
}

publishMods {
    changelog = new File("CHANGELOG.md").text
    type = ReleaseType.of(release_type)

    file = remapJar.archiveFile
    modLoaders.add("fabric")

    modrinth {
        accessToken = providers.gradleProperty("MODRINTH_API_TOKEN")
        projectId = "6kKLK5i1"
        minecraftVersions.addAll(release_minecraft_versions.split(","))

        // Fabric API
        requires {
            slug = "P7dR8mSH"
        }

        // MaLiLib
        requires {
            slug = "GcWjdA9I"
        }

        // Tweakeroo
        optional {
            slug = "t5wuYk45"
        }
    }

    github {
        accessToken = providers.gradleProperty("GITHUB_API_PUBLISH_TOKEN")
        repository = "eclipseisoffline/eclipsestweakeroo"
        commitish = "${project.release_branch}"
    }
}
