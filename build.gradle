import java.nio.file.Files

plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // ParchmentMC repository
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    // Mod Menu repository
    maven {
        url "https://maven.terraformersmc.com/releases/"
    }
    // Curseforge repository
    maven {
        url "https://cursemaven.com"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:${project.parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "curse.maven:malilib-303119:${project.malilib_version}"
    //modImplementation "curse.maven:tweakeroo-297344:${project.tweakeroo_version_cursemaven}" // TODO
    modImplementation files("tweakeroo.jar") // TODO

    // Used during compiling
    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
    // Used during testing
    modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
}

loom {
    accessWidenerPath = file("src/main/resources/eclipsestweakeroo.accesswidener")
}

processResources {
    inputs.property "version", project.version
    inputs.property "supported_versions", project.supported_versions
    inputs.property "loader_version", project.loader_version
    inputs.property "tweakeroo_version", project.tweakeroo_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "supported_versions": project.supported_versions,
                "loader_version": project.loader_version,
                "tweakeroo_version": project.tweakeroo_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    repositories {
        maven {
            name = "GithubPackages"
            url = uri("https://maven.pkg.github.com/eclipseisoffline/eclipsestweakeroo")
            credentials {
                username = "eclipseisoffline"
                password = Files.readString(java.nio.file.Path.of("./github_auth"))
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            artifactId project.archives_base_name

            from components.java
        }
    }
}
